<?xml version="1.0" encoding="utf-8"?>
<!-- SparkSkinning\mySkins\StyleWatcherSkin.mxml -->
<s:Skin
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:s="library://ns.adobe.com/flex/spark"
        minWidth="21" minHeight="21">

  <fx:Metadata>
    [HostComponent("spark.components.Button")]
  </fx:Metadata>
<fx:Script><![CDATA[
    [Bindable("padding")]
    public function get padding():uint {
        return getStyle("padding");
    }

    public function set padding(value:uint):void {
        setStyle("padding", value);
    }
    override public function styleChanged(styleProp:String):void {
        super.styleChanged(styleProp);

        if (styleProp == "padding" || styleProp == null)
            dispatchEvent(new Event("padding"));
    }

    ]]></fx:Script>
    <fx:Style>
        @font-face {
            src: url("../assets/icomoon.ttf");
            fontFamily: 'CustomIcons';
            embedAsCFF: true;
            fontStyle: normal;

        }

    </fx:Style>
  <!-- Specify one state for each SkinState metadata in the host component's class -->
  <s:states>
    <s:State name="up"/>
    <s:State name="over"/>
    <s:State name="down"/>
    <s:State name="disabled"/>
  </s:states>

  <!-- background -->
  <s:Rect left="0" right="0" top="0" bottom="0" >

    <s:fill>
      <s:SolidColor id="bg" color="{getStyle('color')}" />
    </s:fill>
  </s:Rect>

  <s:Label id="labelDisplay" color="white"
           horizontalCenter="0" verticalCenter="1"
           left="{getStyle('padding')}" right="{getStyle('padding')}" top="{getStyle('padding')}" bottom="{getStyle('padding')}">
  </s:Label>

</s:Skin>