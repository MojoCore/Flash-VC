<?xml version="1.0" encoding="utf-8"?>
<!-- SparkSkinning\mySkins\StyleWatcherSkin.mxml -->
<s:Skin
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:s="library://ns.adobe.com/flex/spark"
        minWidth="21" minHeight="21" creationComplete="init()">

  <fx:Metadata>
    [HostComponent("spark.components.ToggleButton")]
  </fx:Metadata>
  <fx:Script><![CDATA[

    private function init():void{
      //padding=5;
    }
    [Bindable("padding")]
    public function get padding():uint {
      return getStyle("padding");
    }

    public function set padding(value:uint):void {
      setStyle("padding", value);
    }
    override public function styleChanged(styleProp:String):void {
      super.styleChanged(styleProp);

      if (styleProp == "padding" || styleProp == null)
        dispatchEvent(new Event("padding"));
    }

    ]]></fx:Script>
  <fx:Style>
    @font-face {
      src: url("../assets/icomoon.ttf");
      fontFamily: 'CustomIcons';
      embedAsCFF: true;
      fontStyle: normal;

    }

  </fx:Style>
  <!-- Specify one state for each SkinState metadata in the host component's class -->
  <s:states>
    <s:State name="up"/>
    <s:State name="over"/>
    <s:State name="down"/>
    <s:State name="disabled"/>
      <s:State name="upAndSelected"/>
      <s:State name="overAndSelected"/>
      <s:State name="downAndSelected"/>
      <s:State name="disabledAndSelected"/>
  </s:states>

  <!-- layer 2: fill -->
  <s:Rect left="1" right="1" top="1" bottom="1" radiusX="2" radiusY="2">
    <s:fill>
      <s:LinearGradient rotation="90">
        <s:GradientEntry color="0xc1c1c1"
                         color.over="0xBBBDBD"
                         color.down="0xAAAAAA"
                         alpha="0.85" />
        <s:GradientEntry color="0xD8D8D8"
                         color.over="0x9FA0A1"
                         color.down="0x929496"
                         alpha="0.85" />
      </s:LinearGradient>
    </s:fill>
  </s:Rect>

  <!-- layer 2: border -->
  <s:Rect left="0" right="0" top="0" bottom="0" width="69" height="20" radiusX="0" radiusY="0">
    <s:stroke>

      <s:LinearGradientStroke rotation="90" weight="1">
        <s:GradientEntry color="0x000000"
                         alpha="1"
                         alpha.down="1" alpha.disabled="1" alpha.over="1"
                         alpha.upAndSelected="1" alpha.downAndSelected="1" alpha.disabledAndSelected="1" />
        <s:GradientEntry color="0x000000"
                         alpha="0.9"
                         alpha.down="0.9" />
        <s:GradientEntry color="0x000000"
                         alpha="1"
                         alpha.down="1" alpha.disabled="1" alpha.over="1"
                         alpha.upAndSelected="0" alpha.downAndSelected="0" alpha.disabledAndSelected="0"  />
      </s:LinearGradientStroke>
    </s:stroke>
  </s:Rect>

  <s:Label id="labelDisplay"
           textAlign="center"
           verticalAlign="middle"
           lineBreak="toFit"
           horizontalCenter="0" verticalCenter="1"
           left="10" right="10" top="2" bottom="2">
  </s:Label>

</s:Skin>