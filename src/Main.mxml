<?xml version="1.0" encoding="utf-8"?>

<s:Application name="Spark_VideoPlayer_skinClass_scrubBar_test"
               xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="init()"
               xmlns:mx="library://ns.adobe.com/flex/mx"
                xmlns:custom="components.*">

    <fx:Script><![CDATA[
        import models.CardComponent;
        import mx.collections.ArrayCollection;
        import mx.managers.IBrowserManager;
        import org.osmf.events.TimeEvent;
        import services.Card;
        import services.TransitionCards;

        import util.ParamsUrl;
        import util.RestService;

        private var bm:IBrowserManager;
        [Bindable]
        private var param1:String;
        private var showCartBox:Boolean = false;
        private var JsonData:Object;
        private var transitionCards:TransitionCards;
        private var params:ArrayCollection;

        private function init():void {
            var id:String;
            RestService.SetConfigServer('http://45.55.249.97/api/v1/');
            var service:RestService = new RestService('videos');
            ParamsUrl.ReadParamsFromUrl();
            id=ParamsUrl.get('id');
            service.Get(id, function (e:Event) {
                var loader:URLLoader = URLLoader(e.target);
                JsonData = JSON.parse(loader.data);
                InitDataForVideo();
            });
        }


        private function InitDataForVideo():void {
            var cards:ArrayCollection;
            videoPlayer.source = JsonData.urls.originalUrl;
            cards=services.Card.ConvertToCards(JsonData.actions);
            transitionCards = new TransitionCards(cards,new CardComponent(card));

        }

        private function currentTimeChangeHandler(event:TimeEvent):void {
            transitionCards.EvalCardsInTime(event.time);
        }
        private function vpCompleteHandler(event:TimeEvent):void {
            transitionCards.ResetTransitions();
        }



        private function MoveCartBox():void {
            showCartBox = !showCartBox;
            if (showCartBox) {
                moveCartBoxRight.play();
            } else {
                moveCartBoxLeft.play();
            }
        }
        ]]></fx:Script>
    <fx:Declarations>
        <s:Move id="moveCartBoxRight" target="{CartBox}" xBy="278" duration="500"/>
        <s:Move id="moveCartBoxLeft" target="{CartBox}" xBy="-278" duration="500"/>
    </fx:Declarations>
    <!--s:layout>
        <s:HorizontalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"/>
    </s:layout-->
    <s:VideoPlayer id="videoPlayer"
                    currentTimeChange="currentTimeChangeHandler(event)"
                   complete="vpCompleteHandler(event);"
                   skinClass="skins.CustomVideoSkin"
                   width="100%"
                   height="100%" />
    <s:Button
            icon="@Embed('assets/cart.png')"
            cornerRadius="{funButton.height/2}"
            id="funButton" label=""
            top="10"
            right="10"
            width="50"
            height="50"
            skinClass="skins.SkinButton"
            click="MoveCartBox()"
            />

    <mx:Box id="CartBox"
            direction="vertical" top="0"  width="278" height="100%"
            borderStyle="solid"
            backgroundColor="0xFFFFFF"
            paddingTop="0"
            paddingBottom="0"
            paddingLeft="0"
            paddingRight="0"
            x="-278">

    </mx:Box>

    <custom:Card id="card"
                 bottom="50"
                 left="20"
                 width="170"
                 height="231"
                 textAlign="center"
                 visible="false"/>

</s:Application>
